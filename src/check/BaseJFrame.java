package check;

import alg.Check;
import alg.SubInfo;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JFileChooser;

import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.xy.XYSeries;
import org.jfree.data.xy.XYSeriesCollection;

public class BaseJFrame extends javax.swing.JFrame {

  // default color
  private static Color myBlue = new Color(27, 161, 226);
  private static Color myRed = new Color(229, 20, 0);
  private static Color myGreen = new Color(51, 153, 51);

  // CA info
  private int CParameter;
  private int[] CValue;
  private ArrayList<Integer> CTway;
  private ArrayList<int[]> CoverArray;

  // sub CA
  private ArrayList<SubInfo> SubCA;

  // thread for check method
  private CheckThread check_t = null;

  // chart
  private JFreeChart chart;

  // label and cov results
  private JButton[] BSelection;
  private ActionListener ac;
  private String[] covResult;

  /**
   * Creates new form BaseJFrame
   */
  public BaseJFrame() {
    initComponents();
    jLayeredPane2.setVisible(false);
    // buttom selection
    jButtonSel1.setVisible(false);
    jButtonSel2.setVisible(false);
    jButtonSel3.setVisible(false);
    jButtonSel4.setVisible(false);
    jButtonSel5.setVisible(false);
    BSelection = new JButton[5];
    BSelection[0] = jButtonSel1;
    BSelection[1] = jButtonSel2;
    BSelection[2] = jButtonSel3;
    BSelection[3] = jButtonSel4;
    BSelection[4] = jButtonSel5;
    // listener
    ac = new ClickJButton();
    for (int i = 0; i < 5; i++)
      BSelection[i].addActionListener(ac);
  }

  /*
   * show message in Label
   */
  private void labelShow(String str, String type) {
    Label.setText(str);
    switch (type) {
      case "error":
        Label.setForeground(myRed);
        break;
      case "info":
        Label.setForeground(myBlue);
        break;
      case "success":
        Label.setForeground(myGreen);
        break;
    }
    Label.validate();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  private void initComponents() {

    jbasePanel = new javax.swing.JLayeredPane();
    jLayeredPane1 = new javax.swing.JLayeredPane();
    Label = new javax.swing.JLabel();
    jButtonSelect = new javax.swing.JButton();
    jButtonRun = new javax.swing.JButton();
    jLayeredPane2 = new javax.swing.JLayeredPane();
    jButtonBack = new javax.swing.JButton();
    jPanelChartShow = new javax.swing.JPanel();
    jLabelShow2 = new javax.swing.JLabel();
    jLabelShow1 = new javax.swing.JLabel();
    jLabelResult1 = new javax.swing.JLabel();
    jLabelResult2 = new javax.swing.JLabel();
    jButtonSel1 = new javax.swing.JButton();
    jButtonSel2 = new javax.swing.JButton();
    jButtonSel3 = new javax.swing.JButton();
    jButtonSel4 = new javax.swing.JButton();
    jButtonSel5 = new javax.swing.JButton();
    jLabelShow3 = new javax.swing.JLabel();
    jScrollPane3 = new javax.swing.JScrollPane();
    jLabelResult3 = new javax.swing.JLabel();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("coverage check");
    setLocationByPlatform(true);
    setName("ccheck"); // NOI18N
    setResizable(false);

    jbasePanel.setBackground(new java.awt.Color(255, 255, 255));
    jbasePanel.setOpaque(true);

    Label.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
    Label.setForeground(new java.awt.Color(0, 153, 255));
    Label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    Label.setText("waiting for selecting file");
    Label.setBounds(0, 190, 700, 30);
    jLayeredPane1.add(Label, javax.swing.JLayeredPane.DEFAULT_LAYER);

    jButtonSelect.setBackground(new java.awt.Color(255, 255, 255));
    jButtonSelect.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
    jButtonSelect.setForeground(new java.awt.Color(255, 255, 255));
    jButtonSelect.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/read.png"))); // NOI18N
    jButtonSelect.setToolTipText("");
    jButtonSelect.setContentAreaFilled(false);
    jButtonSelect.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButtonSelect.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/read-dis.png"))); // NOI18N
    jButtonSelect.setFocusPainted(false);
    jButtonSelect.setOpaque(true);
    jButtonSelect.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        jButtonSelectMouseClicked(evt);
      }
    });
    jButtonSelect.setBounds(195, 30, 150, 150);
    jLayeredPane1.add(jButtonSelect, javax.swing.JLayeredPane.DEFAULT_LAYER);

    jButtonRun.setBackground(new java.awt.Color(255, 255, 255));
    jButtonRun.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
    jButtonRun.setForeground(new java.awt.Color(255, 255, 255));
    jButtonRun.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/check.png"))); // NOI18N
    jButtonRun.setToolTipText("");
    jButtonRun.setContentAreaFilled(false);
    jButtonRun.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButtonRun.setDebugGraphicsOptions(javax.swing.DebugGraphics.BUFFERED_OPTION);
    jButtonRun.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/check-dis.png"))); // NOI18N
    jButtonRun.setEnabled(false);
    jButtonRun.setFocusable(false);
    jButtonRun.setMargin(new java.awt.Insets(2, 2, 2, 2));
    jButtonRun.setOpaque(true);
    jButtonRun.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        jButtonRunMouseClicked(evt);
      }
    });
    jButtonRun.setBounds(360, 30, 150, 150);
    jLayeredPane1.add(jButtonRun, javax.swing.JLayeredPane.DEFAULT_LAYER);

    jLayeredPane1.setBounds(0, 80, 700, 230);
    jbasePanel.add(jLayeredPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

    jButtonBack.setBackground(new java.awt.Color(255, 255, 255));
    jButtonBack.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
    jButtonBack.setForeground(new java.awt.Color(255, 255, 255));
    jButtonBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/back-arrow.png"))); // NOI18N
    jButtonBack.setText("back");
    jButtonBack.setBorder(null);
    jButtonBack.setContentAreaFilled(false);
    jButtonBack.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButtonBack.setFocusPainted(true);
    jButtonBack.setOpaque(true);
    jButtonBack.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        jButtonBackMouseClicked(evt);
      }
    });
    jButtonBack.setBounds(10, 340, 50, 40);
    jLayeredPane2.add(jButtonBack, javax.swing.JLayeredPane.DEFAULT_LAYER);

    jPanelChartShow.setBackground(new java.awt.Color(255, 255, 255));
    jPanelChartShow.setPreferredSize(new java.awt.Dimension(140, 100));

    javax.swing.GroupLayout jPanelChartShowLayout = new javax.swing.GroupLayout(jPanelChartShow);
    jPanelChartShow.setLayout(jPanelChartShowLayout);
    jPanelChartShowLayout.setHorizontalGroup(
      jPanelChartShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 490, Short.MAX_VALUE)
    );
    jPanelChartShowLayout.setVerticalGroup(
      jPanelChartShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 290, Short.MAX_VALUE)
    );

    jPanelChartShow.setBounds(190, 10, 490, 290);
    jLayeredPane2.add(jPanelChartShow, javax.swing.JLayeredPane.DEFAULT_LAYER);

    jLabelShow2.setBackground(new java.awt.Color(255, 255, 255));
    jLabelShow2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
    jLabelShow2.setText("coverage statistic");
    jLabelShow2.setToolTipText("");
    jLabelShow2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    jLabelShow2.setBounds(10, 70, 170, 30);
    jLayeredPane2.add(jLabelShow2, javax.swing.JLayeredPane.DEFAULT_LAYER);

    jLabelShow1.setBackground(new java.awt.Color(255, 255, 255));
    jLabelShow1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
    jLabelShow1.setText("the size of test suite");
    jLabelShow1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    jLabelShow1.setBounds(10, 10, 170, 30);
    jLayeredPane2.add(jLabelShow1, javax.swing.JLayeredPane.DEFAULT_LAYER);

    jLabelResult1.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
    jLabelResult1.setForeground(new java.awt.Color(27, 161, 226));
    jLabelResult1.setText("42");
    jLabelResult1.setBounds(10, 30, 160, 40);
    jLayeredPane2.add(jLabelResult1, javax.swing.JLayeredPane.DEFAULT_LAYER);

    jLabelResult2.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
    jLabelResult2.setForeground(new java.awt.Color(27, 161, 226));
    jLabelResult2.setText("0.9875");
    jLabelResult2.setBounds(10, 90, 170, 50);
    jLayeredPane2.add(jLabelResult2, javax.swing.JLayeredPane.DEFAULT_LAYER);


    /*
     *  jButtonSel
     */
    jButtonSel1.setBackground(new java.awt.Color(27, 161, 226));
    jButtonSel1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
    jButtonSel1.setForeground(new java.awt.Color(255, 255, 255));
    jButtonSel1.setText("2-way");
    jButtonSel1.setBorderPainted(false);
    jButtonSel1.setContentAreaFilled(false);
    jButtonSel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButtonSel1.setFocusPainted(true);
    jButtonSel1.setOpaque(true);
    jButtonSel1.setBounds(190, 310, 90, 40);
    jLayeredPane2.add(jButtonSel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

    jButtonSel2.setBackground(new java.awt.Color(255, 255, 255));
    jButtonSel2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
    jButtonSel2.setText("3-way");
    jButtonSel2.setBorderPainted(false);
    jButtonSel2.setContentAreaFilled(false);
    jButtonSel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButtonSel2.setFocusPainted(true);
    jButtonSel2.setOpaque(true);
    jButtonSel2.setBounds(280, 310, 90, 40);
    jLayeredPane2.add(jButtonSel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

    jButtonSel3.setBackground(new java.awt.Color(255, 255, 255));
    jButtonSel3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
    jButtonSel3.setText("4-way");
    jButtonSel3.setBorderPainted(false);
    jButtonSel3.setContentAreaFilled(false);
    jButtonSel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButtonSel3.setFocusPainted(true);
    jButtonSel3.setOpaque(true);
    jButtonSel3.setBounds(360, 310, 90, 40);
    jLayeredPane2.add(jButtonSel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

    jButtonSel4.setBackground(new java.awt.Color(255, 255, 255));
    jButtonSel4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
    jButtonSel4.setText("5-way");
    jButtonSel4.setBorderPainted(false);
    jButtonSel4.setContentAreaFilled(false);
    jButtonSel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButtonSel4.setFocusPainted(true);
    jButtonSel4.setOpaque(true);
    jButtonSel4.setBounds(440, 310, 90, 40);
    jLayeredPane2.add(jButtonSel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

    jButtonSel5.setBackground(new java.awt.Color(255, 255, 255));
    jButtonSel5.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
    jButtonSel5.setText("6-way");
    jButtonSel5.setBorderPainted(false);
    jButtonSel5.setContentAreaFilled(true);
    jButtonSel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jButtonSel5.setFocusPainted(true);
    jButtonSel5.setOpaque(true);
    jButtonSel5.setBounds(520, 310, 90, 40);
    jLayeredPane2.add(jButtonSel5, javax.swing.JLayeredPane.DEFAULT_LAYER);


    jLabelShow3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
    jLabelShow3.setText("variable strengths");
    jLabelShow3.setBounds(10, 140, 140, 20);
    jLayeredPane2.add(jLabelShow3, javax.swing.JLayeredPane.DEFAULT_LAYER);

    jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));
    jScrollPane3.setBorder(null);
    jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

    jLabelResult3.setBackground(new java.awt.Color(255, 255, 255));
    jLabelResult3.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
    jLabelResult3.setForeground(new java.awt.Color(27, 161, 226));
    jLabelResult3.setText("sub 0: 0.1111");
    jLabelResult3.setVerticalAlignment(javax.swing.SwingConstants.TOP);
    jLabelResult3.setOpaque(true);
    jScrollPane3.setViewportView(jLabelResult3);

    jScrollPane3.setBounds(10, 170, 160, 140);
    jLayeredPane2.add(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);

    jLayeredPane2.setBounds(10, 30, 690, 390);
    jbasePanel.add(jLayeredPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

    jLabel1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
    jLabel1.setForeground(new java.awt.Color(51, 153, 51));
    jLabel1.setText("Help & Info");
    jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        jLabel1MouseClicked(evt);
      }
    });
    jLabel1.setBounds(600, 10, 100, 20);
    jbasePanel.add(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

    jLabel2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
    jLabel2.setForeground(new java.awt.Color(51, 153, 51));
    jLabel2.setText("File Example");
    jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
      public void mouseClicked(java.awt.event.MouseEvent evt) {
        jLabel2MouseClicked(evt);
      }
    });
    jLabel2.setBounds(490, 10, 100, 20);
    jbasePanel.add(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jbasePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 698, javax.swing.GroupLayout.PREFERRED_SIZE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
          .addComponent(jbasePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGap(0, 0, Short.MAX_VALUE))
    );

    pack();
  }

  /*
   * Read from file
   */
  private void jButtonSelectMouseClicked(java.awt.event.MouseEvent evt) {
    if (!jButtonSelect.isEnabled())
      return;

    JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogType(JFileChooser.OPEN_DIALOG);
    int res = fileChooser.showOpenDialog(getContentPane());

    if (res == JFileChooser.APPROVE_OPTION) {
      File file = fileChooser.getSelectedFile();

      try {
        FileReader fr = new FileReader(file);
        BufferedReader bfr = new BufferedReader(fr);

        // read from file
        // line 1
        String line1 = bfr.readLine();
        int pos = line1.indexOf("#");
        if (pos != -1)
          line1 = line1.substring(0, pos - 1);
        if (line1.matches("parameter\\s[1-9][0-9]*\\s*")) {
          line1 = line1.trim();
          this.CParameter = Integer.valueOf(line1.substring(10));
        } else {
          labelShow("error, incorrect parameter format", "error");
          return;
        }

        // line 2
        String line2 = bfr.readLine();
        pos = line2.indexOf("#");
        if (pos != -1)
          line2 = line2.substring(0, pos - 1);
        if (line2.matches("value(\\s[1-9][0-9]*){" + String.valueOf(this.CParameter) + "}\\s*")) {
          line2 = line2.trim();
          line2 = line2.substring(6);
          String[] tmp = line2.split("\\s");
          this.CValue = new int[this.CParameter];
          for (int k = 0; k < tmp.length; k++) {
            this.CValue[k] = Integer.valueOf(tmp[k]);
            if (this.CValue[k] <= 0) {
              labelShow("error, values cannot be less than zero", "error");
              return;
            }
          }
        } else {
          labelShow("error, incorrect values format", "error");
          return;
        }

        // line 3
        String line3 = bfr.readLine();
        pos = line3.indexOf("#");
        if (pos != -1)
          line3 = line3.substring(0, pos - 1);
        if (line3.matches("check(\\s[2-6]){2,6}\\s*")) {
          line3 = line3.trim();
          line3 = line3.substring(6);
          String[] tmp = line3.split("\\s");
          CTway = new ArrayList();
          for (int k = 0; k < tmp.length; k++) {
            // check duplication and maximum value
            int judge = 0;
            for (int l = 0; l < CTway.size(); l++) {
              if (CTway.get(l) == Integer.valueOf(tmp[k])) {
                judge = 1;
              }
              if (CTway.get(l) > this.CParameter) {
                judge = 2;
              }
            }

            if (judge == 0)
              this.CTway.add(Integer.valueOf(tmp[k]));
            else {
              if (judge == 1)
                labelShow("error, there exist duplicate t-way values", "error");
              if (judge == 2)
                labelShow("error, there has a t-way larger than number of parameter", "error");
              return;
            }
          }
        } else {
          labelShow("error, incorrect t-way format", "error");
          return;
        }

        // line 4
        String line4 = bfr.readLine();
        pos = line4.indexOf("#");
        if (pos != -1)
          line4 = line4.substring(0, pos - 1);
        boolean readCA = false;
        this.CoverArray = new ArrayList();
        this.SubCA = new ArrayList();

        // there exist sub info (optional line)
        if (line4.matches("subcheck\\s*")) {
          String str;
          while ((str = bfr.readLine()) != null) {
            pos = str.indexOf("#");
            if (pos != -1) {
              str = str.substring(0, pos - 1);
            }
            str = str.trim();
            // break condition, the end of sub info
            if (str.equals("begin")) {
              readCA = true;
              break;
            }
            // process sub info
            if (str.matches("[1-6];(\\s[0-9]+)+")) {
              int st = Integer.valueOf(str.substring(0, 1));
              str = str.substring(3);
              String[] sv_str = str.split("\\s");
              if (sv_str.length < st) {
                labelShow("error, the number of factors of sub group cannot be less than sub strength", "error");
                return;
              }
              int[] sv = new int[sv_str.length];  // sub pos
              for (int k = 0; k < sv.length; k++)
                sv[k] = Integer.valueOf(sv_str[k]);

              for (int a = 0; a < sv.length; a++) { // sub pos check
                for (int b = a + 1; b < sv.length; b++) {
                  if (sv[a] == sv[b]) {
                    labelShow("error, there exist duplicate factors in one sub group", "error");
                    return;
                  }
                }
              }

              SubInfo si = new SubInfo(st, sv);
              SubCA.add(si);
            } else {
              labelShow("error, incorrect sub check format", "error");
              return;
            }
          } // end while
        } // end if

        // read CA
        if (readCA || line4.matches("begin\\s*")) {
          String str;
          while ((str = bfr.readLine()) != null) {
            pos = str.indexOf("#");
            if (pos != -1) {
              str = str.substring(0, pos - 1);
            }
            str = str.trim();
            // break condition
            if (str.equals("end")) {
              break;
            }
            String[] tmp = str.split("\\s");
            if (tmp.length != this.CParameter) {
              labelShow("error, incorrect CA content", "error");
              return;
            }
            int[] row = new int[this.CParameter];
            for (int k = 0; k < tmp.length; k++) {
              row[k] = Integer.valueOf(tmp[k]);
              if (row[k] < 0 || row[k] >= this.CValue[k]) {
                labelShow("error, incorrect CA content", "error");
                return;
              }
            }
            this.CoverArray.add(row);
          }
        } // end read ca
        else {
          labelShow("error, incorrect CA format", "error");
          return;
        }

      } catch (IOException ex) {
        System.err.println("IOException");
      }

      // show message
      jButtonRun.setEnabled(true);
      labelShow("read file successfully, click check to calculate coverage", "success");
    }
  }

  /*
   * check button
   */
  private void jButtonRunMouseClicked(java.awt.event.MouseEvent evt) {
    // TODO add your handling code here:
    if (!jButtonRun.isEnabled())
      return;

    // run check thread
    check_t = new CheckThread();
    check_t.start();

    // show message
    labelShow("waiting...", "info");
    jButtonSelect.setEnabled(false);
    jButtonRun.setEnabled(false);

    // t-way selection label
    BSelection[0].setText(CTway.get(0) + "-way");
    BSelection[0].setForeground(Color.white);
    BSelection[0].setBackground(myBlue);
    BSelection[0].setVisible(true);

    for (int k = 1; k < CTway.size(); k++) {
      BSelection[k].setText(CTway.get(k) + "-way");
      BSelection[k].setForeground(Color.black);
      BSelection[k].setBackground(Color.white);
      BSelection[k].setVisible(true);
    }

    for (int k = CTway.size(); k < 5; k++) {
      BSelection[k].setVisible(false);
    }
  }

  /*
   * back button
   */
  private void jButtonBackMouseClicked(java.awt.event.MouseEvent evt) {
    // TODO add your handling code here:
    jLayeredPane2.setVisible(false);
    jButtonSelect.setEnabled(true);
    jButtonRun.setEnabled(false);
    jPanelChartShow.removeAll();

    // clear
    CTway.clear();
    CoverArray.clear();

    labelShow("waiting for selecting file", "info");
    //LabelExample.setVisible(true);
    jLayeredPane1.setVisible(true);
  }

  /*
   * (file example) and (help and info) jFrame
   */
  private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {
    // TODO add your handling code here:
    new ExampleJFrame().setVisible(true);
  }

  private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {
    // TODO add your handling code here:
    new InfoJFrame().setVisible(true);
  }

  /*
   * Check Method
   */
  private class CheckThread extends Thread {
    @Override
    public void run() {
      Check c = new Check(CParameter, CValue, CTway, SubCA, CoverArray);
      c.run();

      // check done, hide panel1 and then show panel2
      jLayeredPane1.setVisible(false);

      // statistic info show
      jLabelResult1.setText(c.getCoverSize());
      jLabelShow2.setText(CTway.get(0) + "-way coverage");
      covResult = c.getCoverSta();
      jLabelResult2.setText(covResult[0]);

      // sub show
      if (!SubCA.isEmpty()) {
        String res = "<html>";
        for (int k = 0; k < SubCA.size(); k++) {
          res = res + "<p>sub " + k + " = " + String.format("%.4f", SubCA.get(k).getCoverage()) + "</p>";
        }
        res += "</html>";
        jLabelResult3.setText(res);
        jLabelShow3.setVisible(true);
        jScrollPane3.setVisible(true);
      } else {
        jLabelShow3.setVisible(false);
        jScrollPane3.setVisible(false);
      }

      /*
       * chart show
       */
      // get chart data
      double[][] raw = c.getCoverArray();
      XYSeriesCollection dataset1 = new XYSeriesCollection();
      for (int t = 0; t < CTway.size(); t++) {
        XYSeries series = new XYSeries(CTway.get(t) + "-way");
        for (int k = 0; k < CoverArray.size(); k++) {
          series.add(k + 1, raw[t][k]);
        }
        // Add the series to your data set
        dataset1.addSeries(series);
      }

      // set chart
      chart = ChartFactory.createXYAreaChart(
        "", // Title
        "", // x-axis Label
        "", // y-axis Label
        dataset1, // Dataset
        PlotOrientation.VERTICAL, // Plot Orientation
        false, // Show Legend
        true, // Use tooltips
        true // Configure chart to generate URL
      );
      chart.setBackgroundPaint(Color.white);
      chart.setBorderVisible(false);


      XYPlot plot = chart.getXYPlot();
      plot.setBackgroundPaint(Color.white);
      plot.setOutlinePaint(Color.white);
      plot.setRangeGridlinePaint(Color.gray);
      plot.setRangeGridlinesVisible(true);

      plot.getRenderer().setSeriesPaint(0, myBlue);
      for (int k = 1; k < CTway.size(); k++) {
        plot.getRenderer().setSeriesPaint(k, myBlue);
        plot.getRenderer().setSeriesVisible(k, false);
      }

      NumberAxis x_axis = (NumberAxis) plot.getDomainAxis();
      x_axis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());

      // create chart
      ChartPanel chartPane = new ChartPanel(chart);
      chartPane.setPreferredSize(new Dimension(490, 290));
      chartPane.setEnforceFileExtensions(false);

      jPanelChartShow.setLayout(new java.awt.BorderLayout());
      jPanelChartShow.add(chartPane, BorderLayout.CENTER);
      jPanelChartShow.validate();

      // show result
      jLayeredPane2.setVisible(true);
    }
  }

  /*
   * listen jButton
   */
  private class ClickJButton implements ActionListener {
    @Override
    public void actionPerformed(ActionEvent e) {
      int index = -1;
      if (e.getSource() == jButtonSel1)
        index = 0;
      if (e.getSource() == jButtonSel2)
        index = 1;
      if (e.getSource() == jButtonSel3)
        index = 2;
      if (e.getSource() == jButtonSel4)
        index = 3;
      if (e.getSource() == jButtonSel5)
        index = 4;

      // paint
      XYPlot plot = chart.getXYPlot();
      for (int i = 0; i < CTway.size(); i++) {
        // show
        if (i == index) {
          BSelection[i].setForeground(Color.white);
          BSelection[i].setBackground(myBlue);
          plot.getRenderer().setSeriesVisible(i, true);
        } else {
          BSelection[i].setForeground(Color.black);
          BSelection[i].setBackground(Color.white);
          plot.getRenderer().setSeriesVisible(i, false);
        }
      }

      // cov result
      jLabelShow2.setText(CTway.get(index) + "-way coverage statistic");
      jLabelResult2.setText(covResult[index]);

    }
  }


  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
        /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Windows".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(BaseJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(BaseJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(BaseJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(BaseJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>
        
        /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      @Override
      public void run() {
        new BaseJFrame().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel Label;
  private javax.swing.JButton jButtonBack;
  private javax.swing.JButton jButtonRun;
  private javax.swing.JButton jButtonSel1;
  private javax.swing.JButton jButtonSel2;
  private javax.swing.JButton jButtonSel3;
  private javax.swing.JButton jButtonSel4;
  private javax.swing.JButton jButtonSel5;
  private javax.swing.JButton jButtonSelect;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabelResult1;
  private javax.swing.JLabel jLabelResult2;
  private javax.swing.JLabel jLabelResult3;
  private javax.swing.JLabel jLabelShow1;
  private javax.swing.JLabel jLabelShow2;
  private javax.swing.JLabel jLabelShow3;
  private javax.swing.JLayeredPane jLayeredPane1;
  private javax.swing.JLayeredPane jLayeredPane2;
  private javax.swing.JPanel jPanelChartShow;
  private javax.swing.JScrollPane jScrollPane3;
  private javax.swing.JLayeredPane jbasePanel;
  // End of variables declaration//GEN-END:variables
}